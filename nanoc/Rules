#!/usr/bin/env ruby

preprocess do
  root_item = items.find {|i| i.identifier == '/'}
  items << Nanoc::Item.new(
    root_item.raw_content,
    root_item.attributes.merge({offline_mode: true}),
    '/offline/'
  )
end




compile '/' do
  filter :haml
end

compile '/offline/' do
  filter :haml
end

compile '/stylesheets/whole/' do
  # FIXME: Combine related files.
end

compile '/javascripts/whole/' do
  # FIXME: Combine related files.
end

compile '*' do
  next if item.binary?
  next if item[:extension] == 'css'

  filter :erb
  layout 'default'
end




route '/' do
  '/index.html'
end

route '/offline/' do
  '/offline.html'
end

route '/stylesheets/whole/' do
  '/assets/whole.css'
end

route '/javascripts/whole/' do
  '/assets/whole.js'
end

route '*' do
  if item[:extension]
    item.identifier.chop + '.' + item[:extension]
  else
    item.identifier.chop
  end
end

layout '*', :erb
